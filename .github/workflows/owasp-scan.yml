name: OWASP ZAP Scan

on: [push]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    name: Run OWASP ZAP scan against Dockerized application
    steps:
      # Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v4.2.0
        with:
          fetch-depth: 0
      # Set up Docker in the runner environment
      - name: Set up Docker
        run: sudo apt-get update && sudo apt-get install docker -y

      # Create a custom Docker network to allow communication between containers
      - name: Create Docker network
        run: docker network create zap-net

      # Build the Docker image for the target web application
      - name: Build Docker image for target application
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:latest .

      # Run the target web application in a Docker container
      - name: Run target application in Docker
        run: |
          docker run -d --name fast-api --network zap-net \
            -p 3000:3000 ${{ env.IMAGE_NAME }}:latest
          docker ps

      # Check docker
      - name: Run  Docker ps
        run: |
          docker ps

      # Health check for the target application
      - name: Wait for target application to be ready
        run: |
          echo "Waiting for the application to be healthy..."
          until curl -s http://localhost:3000/health | grep "healthy"; do
            echo "Application not ready yet..."
            sleep 5
          done
          echo "Application is ready!"


      # Run OWASP ZAP scan using Docker and point it to the application container
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.11.0
        with:
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:3000'
          cmd_options: '-a'
          artifact_name: zap_report.html



      # Upload ZAP scan results as an artifact
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: ZAP Report
          path: zap_report.html
