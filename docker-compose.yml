services:
  api:
    build: .
    develop:
      watch:
        - action: sync
          path: ./src/
          target: /app/src/
        - action: rebuild
          path: requirements/dev.txt

    image: fastapiapp:latest
    ports:
      - 3000:3000
    volumes:
      - type: bind
        source: .
        target: /app/
    depends_on:
       db:
          condition: service_healthy
    environment: 
        - DB_URI=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
    restart: always
    logging:
      driver: "local"
  db:
    image: postgres:12.1-alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data_disk:/var/lib/postgresql/data/
    environment: 
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB

volumes:
  postgres_data_disk:
    driver: local